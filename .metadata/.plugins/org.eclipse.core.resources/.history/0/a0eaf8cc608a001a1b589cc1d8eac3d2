package com.sales.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter{ 

//https://stackoverflow.com/questions/61363348/error-the-method-withdefaultpasswordencoder-is-undefined-for-the-type-user-s
	@Bean
	public PasswordEncoder getPasswordEncoder() {
	    return NoOpPasswordEncoder.getInstance();
	}

	@Override
	protected void configure(HttpSecurity http) throws Exception {

		//http.csrf().disable();
		
	    http.authorizeRequests()
	        .antMatchers("/addCustomer.html", "/addProduct.html", "/newOrder.html", 
	        		"/showCustomers.html", "/showOrders.html", "/showProducts.html").hasRole("USER")
	        .antMatchers("/").permitAll()
	        	.and()
	        .formLogin()
	        	.and()
	        .logout()
	        	// redirects user to home page after logging out
	        	.logoutSuccessUrl("/index.html").permitAll();
	    
	    
	}

	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
	    auth.inMemoryAuthentication()
	        .withUser("user")
	        .password("password")
	        .roles("USER");
	}
}
