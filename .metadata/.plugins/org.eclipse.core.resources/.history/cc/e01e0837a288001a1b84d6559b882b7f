package com.sales.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter{ 
 @Override
 protected void configure(HttpSecurity http) throws Exception {
  http
    .authorizeRequests()
    .antMatchers("/addCustomer.html")
    .authenticated()
    .and()
    .formLogin();
  }

  @Bean
  @Override
  public UserDetailsService userDetailsService() {
    UserDetails user = User.withDefaultPasswordEncoder()
			.username("user")
			.password("password")
			.roles("USER")
			.build();
    return new InMemoryUserDetailsManager(user);

  }
}

// stack over flow
//	@Bean
//	public PasswordEncoder getPasswordEncoder() {
//	    return NoOpPasswordEncoder.getInstance();
//	}
//
//	@Override
//	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
//	    auth.inMemoryAuthentication()
//	        .withUser("user")
//	        .password("password")
//	        .roles("USER");
//	}
//
//	@Override
//	protected void configure(HttpSecurity http) throws Exception {
//
//	    http.authorizeRequests()
//	        .antMatchers("/addCustomer", "/addProduct", "/newOrder", 
//	        		"/showCustomers", "/showOrders", "/showProducts").hasRole("USER")
//	        //.antMatchers("/").permitAll()
//	        .and()
//	        .formLogin();
//	}
	
//}
